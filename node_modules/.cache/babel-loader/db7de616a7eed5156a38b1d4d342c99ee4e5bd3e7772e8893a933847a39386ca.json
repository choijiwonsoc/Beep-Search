{"ast":null,"code":"var _jsxFileName = \"/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = ({\n  description,\n  disabled = false,\n  filterOptions,\n  label,\n  loading = false,\n  multiple = false,\n  onChange,\n  onInputChange,\n  options,\n  placeholder = 'Search...',\n  renderOption,\n  value\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setInputValue(value);\n    if (onInputChange) {\n      onInputChange(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"autocomplete\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: placeholder,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this), description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Autocomplete, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = Autocomplete;\nexport default Autocomplete;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Autocomplete","description","disabled","filterOptions","label","loading","multiple","onChange","onInputChange","options","placeholder","renderOption","value","_s","inputValue","setInputValue","handleInputChange","event","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react';\nimport styles from './autocomplete.module.css';\n\ninterface Option {\n    value: string;\n    label: string;\n}\n\ninterface AutocompleteProps {\n    description: string;\n    disabled: boolean;\n    filterOptions: (options: Option[], inputValue: string) =>Option[];\n    label: string;\n    loading: boolean;\n    multiple: boolean;\n    onChange: (selected: Option | Option[]) => void;\n    onInputChange: (inputValue: string) => void;\n    options: Option[];\n    placeholder: string;\n    renderOption: (option: Option) => React.ReactNode;\n    value: Option|Option[];\n}\n\nconst Autocomplete: React.FC<AutocompleteProps> = ({\n    description,\n    disabled = false,\n    filterOptions,\n    label,\n    loading = false,\n    multiple = false,\n    onChange,\n    onInputChange,\n    options,\n    placeholder = 'Search...',\n    renderOption,\n    value,\n}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setInputValue(value);\n        if(onInputChange){\n            onInputChange(value);\n        }\n    };\n\n    return(\n        <div className=\"autocomplete\">\n            {label && <label>{label}</label>}\n            <input\n            type=\"text\"\n            value={inputValue}\n            onChange = {handleInputChange}\n            placeholder = {placeholder}\n            disabled = {disabled}/>\n            {loading && <div className = \"spinner\">Loading...</div>}\n            {description && <div className = \"description\">{description}</div>}\n          \n        </div>\n    );\n};\n\nexport default Autocomplete;\nexport {};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAqB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuBrD,MAAMC,YAAyC,GAAGA,CAAC;EAC/CC,WAAW;EACXC,QAAQ,GAAG,KAAK;EAChBC,aAAa;EACbC,KAAK;EACLC,OAAO,GAAG,KAAK;EACfC,QAAQ,GAAG,KAAK;EAChBC,QAAQ;EACRC,aAAa;EACbC,OAAO;EACPC,WAAW,GAAG,WAAW;EACzBC,YAAY;EACZC;AACJ,CAAC,KAAK;EAAAC,EAAA;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMmB,iBAAiB,GAAIC,KAA0C,IAAK;IACtE,MAAML,KAAK,GAAGK,KAAK,CAACC,MAAM,CAACN,KAAK;IAChCG,aAAa,CAACH,KAAK,CAAC;IACpB,IAAGJ,aAAa,EAAC;MACbA,aAAa,CAACI,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIb,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,GACxBhB,KAAK,iBAAIL,OAAA;MAAAqB,QAAA,EAAQhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChCzB,OAAA;MACA0B,IAAI,EAAC,MAAM;MACXb,KAAK,EAAEE,UAAW;MAClBP,QAAQ,EAAIS,iBAAkB;MAC9BN,WAAW,EAAIA,WAAY;MAC3BR,QAAQ,EAAIA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACtBnB,OAAO,iBAAIN,OAAA;MAAKoB,SAAS,EAAG,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtDvB,WAAW,iBAAIF,OAAA;MAAKoB,SAAS,EAAG,aAAa;MAAAC,QAAA,EAAEnB;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjE,CAAC;AAEd,CAAC;AAACX,EAAA,CArCIb,YAAyC;AAAA0B,EAAA,GAAzC1B,YAAyC;AAuC/C,eAAeA,YAAY;AAC3B;AAAU,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}