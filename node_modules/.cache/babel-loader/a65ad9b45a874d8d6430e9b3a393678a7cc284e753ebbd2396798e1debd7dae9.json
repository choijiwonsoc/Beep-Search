{"ast":null,"code":"var _jsxFileName = \"/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterOptions = (inputValue, options) => {\n  return options.filter(option => option.label.toLowerCase().includes(inputValue.toLowerCase()));\n};\n\n// Example promise function to fetch options asynchronously\nconst promiseOptions = (inputValue, options) => new Promise(resolve => {\n  // Simulating async data fetching with a timeout\n  setTimeout(() => {\n    // Replace this with your actual data fetching logic\n    const filtered = filterOptions(inputValue, options); // Replace with your actual options and filter function\n    resolve(filtered);\n  }, 500); // Simulating 1 second delay\n});\nconst Autocomplete = ({\n  autoLabel,\n  description,\n  options,\n  placeholder,\n  disabled,\n  loading,\n  onChange,\n  renderOption,\n  value,\n  searchMode,\n  asyncSearch,\n  multiple,\n  onInputChange\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [selectedOptions, setSelectedOptions] = useState(value); // Initialize selectedOptions with the prop value\n  const [showDropdown, setShowDropdown] = useState(false); // State to manage dropdown visibility\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const wrapperRef = useRef(null);\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setInputValue(value);\n    if (searchMode === 'local') {\n      const filtered = filterOptions(value, options);\n      setFilteredOptions(filtered);\n      setShowDropdown(true);\n      // Show dropdown when typing\n    }\n  };\n  const handleOptionSelection = option => {\n    const isSelected = selectedOptions.some(item => item.value === option.value);\n    if (isSelected) {\n      // Remove the option from selectedOptions if already selected\n      const updatedOptions = selectedOptions.filter(item => item.value !== option.value);\n      setSelectedOptions(updatedOptions);\n    } else {\n      // Add the option to selectedOptions if not already selected\n      setSelectedOptions([...selectedOptions, option]);\n    }\n    // No need to remove option if already selected\n  };\n  useEffect(() => {\n    // Update input value when selectedOptions change\n    const selectedLabels = selectedOptions.map(opt => opt.label);\n    setInputValue(selectedLabels.join(', '));\n    onChange(selectedOptions); // Notify parent of selected options change\n  }, [selectedOptions, onChange]);\n  const handleFocus = () => {\n    setShowDropdown(true); // Show dropdown when input is focused\n  };\n  const handleClickOutside = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n  useEffect(() => {\n    // Initialize dropdown state when component mounts\n    // Add event listener to handle clicks outside the component\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const loadOptions = inputValue => {\n    return promiseOptions(inputValue, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [autoLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-600\",\n      children: autoLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }, this), searchMode === 'local' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      onFocus: handleFocus,\n      ref: wrapperRef,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: placeholder,\n        disabled: disabled,\n        className: \"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute left-0 w-full mt-1 bg-white border border-gray-300 rounded shadow-lg z-10\",\n        children: filteredOptions.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center p-2 hover:bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            tabIndex: 0,\n            checked: selectedOptions.some(item => item.value === option.value),\n            onChange: () => handleOptionSelection(option),\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), renderOption(option)]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 40\n    }, this), searchMode === 'async' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        className: \"w-full\",\n        placeholder: \"Start typing for results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-0 top-0 mt-2 mr-2 spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 40\n    }, this), description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-600\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(Autocomplete, \"EkXDfERdWXY6njGNC80mwQhxR+E=\");\n_c = Autocomplete;\nexport default Autocomplete;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AsyncSelect","jsxDEV","_jsxDEV","filterOptions","inputValue","options","filter","option","label","toLowerCase","includes","promiseOptions","Promise","resolve","setTimeout","filtered","Autocomplete","autoLabel","description","placeholder","disabled","loading","onChange","renderOption","value","searchMode","asyncSearch","multiple","onInputChange","_s","setInputValue","selectedOptions","setSelectedOptions","showDropdown","setShowDropdown","filteredOptions","setFilteredOptions","wrapperRef","handleInputChange","event","target","handleOptionSelection","isSelected","some","item","updatedOptions","selectedLabels","map","opt","join","handleFocus","handleClickOutside","current","contains","document","addEventListener","removeEventListener","loadOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFocus","ref","type","tabIndex","checked","isMulti","cacheOptions","_c","$RefreshReg$"],"sources":["/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport debounce from '../utils/debounce';\nimport AsyncSelect from 'react-select/async';\n\nexport interface Option {\n    value: string;\n    label: string;\n}\n\ninterface AutocompleteProps {\n    autoLabel: string;\n    description: string;\n    options: Option[];\n    placeholder: string;\n    disabled: boolean;\n    loading: boolean;\n    onChange: (selected: Option[]) => void;\n    onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    renderOption: (option: Option) => React.ReactNode;\n    value: Option[];\n    searchMode: 'local' | 'async';\n    asyncSearch?: (query: string) => Promise<Option[]>;\n    multiple: boolean;\n}\n\nconst filterOptions = (inputValue: string, options: Option[]) => {\n    return options.filter(option =>\n        option.label.toLowerCase().includes(inputValue.toLowerCase())\n    );\n};\n\n// Example promise function to fetch options asynchronously\nconst promiseOptions = (inputValue: string, options: Option[]) =>\n    new Promise<Option[]>((resolve) => {\n        // Simulating async data fetching with a timeout\n        setTimeout(() => {\n            // Replace this with your actual data fetching logic\n            const filtered = filterOptions(inputValue, options); // Replace with your actual options and filter function\n            resolve(filtered);\n        }, 500); // Simulating 1 second delay\n    });\n\nconst Autocomplete: React.FC<AutocompleteProps> = ({\n    autoLabel,\n    description,\n    options,\n    placeholder,\n    disabled,\n    loading,\n    onChange,\n    renderOption,\n    value,\n    searchMode,\n    asyncSearch,\n    multiple,\n    onInputChange,\n}) => {\n    const [inputValue, setInputValue] = useState('');\n    const [selectedOptions, setSelectedOptions] = useState<Option[]>(value); // Initialize selectedOptions with the prop value\n    const [showDropdown, setShowDropdown] = useState(false); // State to manage dropdown visibility\n    const [filteredOptions, setFilteredOptions] = useState<Option[]>(options);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setInputValue(value);\n\n        if (searchMode === 'local') {\n            const filtered = filterOptions(value, options);\n            setFilteredOptions(filtered);\n            setShowDropdown(true);\n            // Show dropdown when typing\n        }\n    };\n\n\n    const handleOptionSelection = (option: Option) => {\n        const isSelected = selectedOptions.some(item => item.value === option.value);\n\n        if (isSelected) {\n            // Remove the option from selectedOptions if already selected\n            const updatedOptions = selectedOptions.filter(item => item.value !== option.value);\n            setSelectedOptions(updatedOptions);\n        } else {\n            // Add the option to selectedOptions if not already selected\n            setSelectedOptions([...selectedOptions, option]);\n        }\n        // No need to remove option if already selected\n    };\n\n    useEffect(() => {\n        // Update input value when selectedOptions change\n        const selectedLabels = selectedOptions.map(opt => opt.label);\n        setInputValue(selectedLabels.join(', '));\n        onChange(selectedOptions); // Notify parent of selected options change\n    }, [selectedOptions, onChange]);\n    \n    const handleFocus = () => {\n        setShowDropdown(true); // Show dropdown when input is focused\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n        if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n            setShowDropdown(false);\n        }\n    };\n\n    useEffect(() => {\n        // Initialize dropdown state when component mounts\n        // Add event listener to handle clicks outside the component\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n\n\n    const loadOptions = (inputValue: string) => {\n        return promiseOptions(inputValue, options);\n    };\n    return (\n        <div className=\"relative\">\n            {autoLabel && <div className=\"mb-2 text-gray-600\">{autoLabel}</div>}\n            {searchMode === 'local' && <div className=\"relative\" onFocus={handleFocus} ref={wrapperRef}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder={placeholder}\n                    disabled={disabled}\n                    className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-blue-500\"\n                />\n                {showDropdown && (<div className=\"absolute left-0 w-full mt-1 bg-white border border-gray-300 rounded shadow-lg z-10\">\n                    {filteredOptions.map(option => (\n                        <label key={option.value} className=\"flex items-center p-2 hover:bg-gray-100\">\n                            <input\n                                type=\"checkbox\"\n                                tabIndex={0}\n                                checked={selectedOptions.some(item => item.value === option.value)}\n                                onChange={() => handleOptionSelection(option)}\n                                className=\"mr-2\"\n                            />\n                            {renderOption(option)}\n                        </label>\n                    ))}\n                </div>\n                )}\n\n            </div>}\n            {searchMode === 'async' && <div className=\"relative\">\n                <AsyncSelect\n                    isMulti\n                    cacheOptions\n                    loadOptions={loadOptions}\n                    className=\"w-full\"\n                    placeholder=\"Start typing for results...\"\n                />\n                {loading && <div className=\"absolute right-0 top-0 mt-2 mr-2 spinner\">Loading...</div>}\n            </div>}\n            {description && <div className=\"mb-2 text-gray-600\">{description}</div>}\n        </div>\n    );\n};\n\nexport default Autocomplete;\n\nexport { };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}