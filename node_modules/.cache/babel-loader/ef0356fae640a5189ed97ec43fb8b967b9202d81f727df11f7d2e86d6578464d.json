{"ast":null,"code":"var _jsxFileName = \"/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './Autocomplete.module.css';\nimport debounce from '../utils/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = ({\n  description,\n  options,\n  placeholder,\n  disabled,\n  filterOptions,\n  label,\n  loading,\n  multiple,\n  onChange,\n  onInputChange,\n  renderOption,\n  value,\n  searchMode,\n  asyncSearch,\n  handleOptionClick\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [showOptions, setShowOptions] = useState(false); // State to manage showing options\n\n  const handleAsyncSearch = debounce(async query => {\n    if (asyncSearch) {\n      const results = await asyncSearch(query);\n      setFilteredOptions(results);\n    }\n  }, 300);\n  useEffect(() => {\n    if (searchMode === 'async' && asyncSearch) {\n      handleAsyncSearch(inputValue);\n    } else if (filterOptions) {\n      setFilteredOptions(filterOptions(options, inputValue));\n    } else {\n      setFilteredOptions(options.filter(option => option.label.toLowerCase().includes(inputValue.toLowerCase())));\n    }\n  }, [inputValue, options, filterOptions, searchMode, asyncSearch, handleAsyncSearch]);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n    onInputChange(event.target.value);\n  };\n  const handleFocus = () => {\n    setShowOptions(true); // Show options when input is focused\n  };\n  const handleBlur = () => {\n    setShowOptions(false); // Hide options when input loses focus\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.autocomplete,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      placeholder: placeholder,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this), showOptions && searchMode === 'local' &&\n    /*#__PURE__*/\n    // Show options only for synchronous search when focused\n    _jsxDEV(\"div\", {\n      className: \"autocomplete-options mt-2\",\n      children: filteredOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 cursor-pointer transition duration-300 ease-out hover:bg-gray-100\",\n        onClick: () => handleOptionClick(option),\n        children: renderOption(option)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Autocomplete, \"0LbckvHjvaE/AoUNQHYUAhLCt+U=\");\n_c = Autocomplete;\nexport default Autocomplete;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","useEffect","styles","debounce","jsxDEV","_jsxDEV","Autocomplete","description","options","placeholder","disabled","filterOptions","label","loading","multiple","onChange","onInputChange","renderOption","value","searchMode","asyncSearch","handleOptionClick","_s","inputValue","setInputValue","filteredOptions","setFilteredOptions","showOptions","setShowOptions","handleAsyncSearch","query","results","filter","option","toLowerCase","includes","handleInputChange","event","target","handleFocus","handleBlur","className","autocomplete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onFocus","onBlur","map","onClick","_c","$RefreshReg$"],"sources":["/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './Autocomplete.module.css';\nimport debounce from '../utils/debounce';\n\nexport interface Option {\n  value: string;\n  label: string;\n}\n\ninterface AutocompleteProps {\n  description: string;\n  options: Option[];\n  placeholder: string;\n  disabled: boolean;\n  filterOptions?: (options: Option[], inputValue: string) => Option[];\n  label: string;\n  loading: boolean;\n  multiple: boolean;\n  onChange: (selected: Option | Option[]) => void;\n  onInputChange: (inputValue: string) => void;\n  renderOption: (option: Option) => React.ReactNode;\n  value: Option | Option[];\n  searchMode: 'local' | 'async';\n  asyncSearch?: (query: string) => Promise<Option[]>;\n  handleOptionClick: (option: Option) => void;\n}\n\nconst Autocomplete: React.FC<AutocompleteProps> = ({\n  description,\n  options,\n  placeholder,\n  disabled,\n  filterOptions,\n  label,\n  loading,\n  multiple,\n  onChange,\n  onInputChange,\n  renderOption,\n  value,\n  searchMode,\n  asyncSearch,\n  handleOptionClick,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [filteredOptions, setFilteredOptions] = useState<Option[]>([]);\n  const [showOptions, setShowOptions] = useState(false); // State to manage showing options\n\n  const handleAsyncSearch = debounce(async (query: string) => {\n    if (asyncSearch) {\n      const results = await asyncSearch(query);\n      setFilteredOptions(results);\n    }\n  }, 300);\n\n  useEffect(() => {\n    if (searchMode === 'async' && asyncSearch) {\n      handleAsyncSearch(inputValue);\n    } else if (filterOptions) {\n      setFilteredOptions(filterOptions(options, inputValue));\n    } else {\n      setFilteredOptions(options.filter(option =>\n        option.label.toLowerCase().includes(inputValue.toLowerCase())\n      ));\n    }\n  }, [inputValue, options, filterOptions, searchMode, asyncSearch, handleAsyncSearch]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n    onInputChange(event.target.value);\n  };\n\n  const handleFocus = () => {\n    setShowOptions(true); // Show options when input is focused\n  };\n\n  const handleBlur = () => {\n    setShowOptions(false); // Hide options when input loses focus\n  };\n\n  return (\n    <div className={styles.autocomplete}>\n      <label className={styles.label}>{label}</label>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {showOptions && searchMode === 'local' && ( // Show options only for synchronous search when focused\n        <div className=\"autocomplete-options mt-2\">\n          {filteredOptions.map(option => (\n            <div\n              key={option.value}\n              className=\"p-2 cursor-pointer transition duration-300 ease-out hover:bg-gray-100\"\n              onClick={() => handleOptionClick(option)}\n            >\n              {renderOption(option)}\n            </div>\n          ))}\n        </div>\n      )}\n      {description && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default Autocomplete;\nexport { };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}