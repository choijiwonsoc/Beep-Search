{"ast":null,"code":"var _jsxFileName = \"/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './Autocomplete.module.css';\nimport debounce from '../utils/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = ({\n  description,\n  options,\n  placeholder,\n  disabled,\n  filterOptions,\n  loading,\n  multiple,\n  onChange,\n  onInputChange,\n  renderOption,\n  value,\n  searchMode,\n  asyncSearch,\n  handleOptionClick\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [showOptions, setShowOptions] = useState(false); // State to manage showing options\n\n  const handleAsyncSearch = debounce(async query => {\n    if (asyncSearch) {\n      const results = await asyncSearch(query);\n      setFilteredOptions(results);\n    }\n  }, 300);\n  useEffect(() => {\n    if (searchMode === 'async' && asyncSearch) {\n      handleAsyncSearch(inputValue);\n    } else if (filterOptions) {\n      setFilteredOptions(filterOptions(options, inputValue));\n    } else {\n      setFilteredOptions(options.filter(option => option.label.toLowerCase().includes(inputValue.toLowerCase())));\n    }\n  }, [inputValue, options, filterOptions, searchMode, asyncSearch, handleAsyncSearch]);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n    onInputChange(event.target.value);\n  };\n  const handleFocus = () => {\n    setShowOptions(true); // Show options when input is focused\n  };\n  const handleBlur = () => {\n    setShowOptions(false); // Hide options when input loses focus\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.autocomplete,\n    children: [description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      placeholder: placeholder,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this), showOptions && searchMode === 'local' &&\n    /*#__PURE__*/\n    // Show options only for synchronous search when focused\n    _jsxDEV(\"div\", {\n      className: \"autocomplete-options mt-2\",\n      children: filteredOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 cursor-pointer transition duration-300 ease-out hover:bg-gray-100\",\n        onClick: () => handleOptionClick(option),\n        children: renderOption(option)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Autocomplete, \"0LbckvHjvaE/AoUNQHYUAhLCt+U=\");\n_c = Autocomplete;\nexport default Autocomplete;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","useEffect","styles","debounce","jsxDEV","_jsxDEV","Autocomplete","description","options","placeholder","disabled","filterOptions","loading","multiple","onChange","onInputChange","renderOption","value","searchMode","asyncSearch","handleOptionClick","_s","inputValue","setInputValue","filteredOptions","setFilteredOptions","showOptions","setShowOptions","handleAsyncSearch","query","results","filter","option","label","toLowerCase","includes","handleInputChange","event","target","handleFocus","handleBlur","className","autocomplete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onFocus","onBlur","map","onClick","_c","$RefreshReg$"],"sources":["/Users/choijiwon/my-projects/autocomplete-component/src/components/Autocomplete.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './Autocomplete.module.css';\nimport debounce from '../utils/debounce';\n\nexport interface Option {\n    value: string;\n    label: string;\n}\n\ninterface AutocompleteProps {\n    description: string;\n    options: Option[];\n    placeholder: string;\n    disabled: boolean;\n    filterOptions?: (options: Option[], inputValue: string) => Option[];\n    loading: boolean;\n    multiple: boolean;\n    onChange: (selected: Option | Option[]) => void;\n    onInputChange: (inputValue: string) => void;\n    renderOption: (option: Option) => React.ReactNode;\n    value: Option | Option[];\n    searchMode: 'local' | 'async';\n    asyncSearch?: (query: string) => Promise<Option[]>;\n    handleOptionClick: (option: Option) => void;\n}\n\nconst Autocomplete: React.FC<AutocompleteProps> = ({\n    description,\n    options,\n    placeholder,\n    disabled,\n    filterOptions,\n    loading,\n    multiple,\n    onChange,\n    onInputChange,\n    renderOption,\n    value,\n    searchMode,\n    asyncSearch,\n    handleOptionClick,\n}) => {\n    const [inputValue, setInputValue] = useState('');\n    const [filteredOptions, setFilteredOptions] = useState<Option[]>([]);\n    const [showOptions, setShowOptions] = useState(false); // State to manage showing options\n\n    const handleAsyncSearch = debounce(async (query: string) => {\n        if (asyncSearch) {\n            const results = await asyncSearch(query);\n            setFilteredOptions(results);\n        }\n    }, 300);\n\n    useEffect(() => {\n        if (searchMode === 'async' && asyncSearch) {\n            handleAsyncSearch(inputValue);\n        } else if (filterOptions) {\n            setFilteredOptions(filterOptions(options, inputValue));\n        } else {\n            setFilteredOptions(options.filter(option =>\n                option.label.toLowerCase().includes(inputValue.toLowerCase())\n            ));\n        }\n    }, [inputValue, options, filterOptions, searchMode, asyncSearch, handleAsyncSearch]);\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.target.value);\n        onInputChange(event.target.value);\n    };\n\n    const handleFocus = () => {\n        setShowOptions(true); // Show options when input is focused\n    };\n\n    const handleBlur = () => {\n        setShowOptions(false); // Hide options when input loses focus\n    };\n\n    return (\n        <div className={styles.autocomplete}>\n            {description && <div className=\"description\">{description}</div>}\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                placeholder={placeholder}\n                disabled={disabled}\n            />\n            {loading && <div className=\"spinner\">Loading...</div>}\n            {showOptions && searchMode === 'local' && ( // Show options only for synchronous search when focused\n                <div className=\"autocomplete-options mt-2\">\n                    {filteredOptions.map(option => (\n                        <div\n                            key={option.value}\n                            className=\"p-2 cursor-pointer transition duration-300 ease-out hover:bg-gray-100\"\n                            onClick={() => handleOptionClick(option)}\n                        >\n                            {renderOption(option)}\n                        </div>\n                    ))}\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nexport default Autocomplete;\nexport { };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}